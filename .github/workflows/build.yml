name: Build OpenCV + OpenCV-Contrib

env:
  OPENCV_VERSION: 4.11.0

on:
  push:

jobs:
  build_packages:
    runs-on: windows-latest

    strategy:
      matrix:
        platform: ["win"]
        arch: ["x64"]

    steps:
      - name: Fetch code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache VCPKG
        uses: actions/cache@v3
        with:
          path: |
            vcpkg/installed
            vcpkg/buildtrees
            vcpkg/downloads
          key: vcpkg-${{ runner.os }}-${{ matrix.arch }}-${{ env.OPENCV_VERSION }}
          restore-keys: |
            vcpkg-${{ runner.os }}-${{ matrix.arch }}-

      - name: Add MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Check CMake Version
        run: cmake --version

      - name: Add VCPKG
        shell: powershell
        run: |
          # Define vcpkg directory path
          $vcpkgDir = ".\vcpkg"
          $vcpkgExe = "$vcpkgDir\vcpkg.exe"

          # Check if vcpkg.exe exists
          if (-Not (Test-Path $vcpkgExe)) {
              Write-Host "vcpkg.exe not found. Cloning and bootstrapping vcpkg."

              # Clone the vcpkg repository
              git clone https://github.com/microsoft/vcpkg.git $vcpkgDir
              Write-Host "Cloned vcpkg repository."

              # Bootstrap vcpkg
              $bootstrapScript = "$vcpkgDir\bootstrap-vcpkg.bat"
              if (Test-Path $bootstrapScript) {
                  & $bootstrapScript
                  Write-Host "Bootstrapped vcpkg successfully."
              } else {
                  Write-Error "Bootstrap script (bootstrap-vcpkg.bat) is missing. Exiting."
                  exit 1
              }
          } else {
              Write-Host "vcpkg.exe is already installed and ready to use."
          }

          # Add VCPKG paths to the environment
          echo "VCPKG_ROOT=$(Resolve-Path $vcpkgDir)" | Out-File -FilePath $Env:GITHUB_ENV -Append
          echo "PATH=$Env:PATH;$(Resolve-Path $vcpkgDir)" | Out-File -FilePath $Env:GITHUB_ENV -Append

      - name: Install Tesseract Dependency
        run: |
          & "$Env:VCPKG_ROOT\vcpkg" install tesseract:${{ matrix.arch }}-windows-static
        shell: powershell

      - name: Integrate VCPKG with CMake
        run: |
          & "$Env:VCPKG_ROOT\vcpkg" integrate install
        shell: powershell

      - name: List Installed VCPKG Packages
        run: |
          & "$Env:VCPKG_ROOT\vcpkg" list
        shell: powershell

      - name: Cache CMake Build Directory
        uses: actions/cache@v3
        with:
          path: build_win_${{ matrix.arch }}
          key: cmake-build-${{ runner.os }}-${{ matrix.arch }}-${{ env.OPENCV_VERSION }}
          restore-keys: |
            cmake-build-${{ runner.os }}-${{ matrix.arch }}-

      - name: Build OpenCV
        shell: powershell
        run: |
          # Optional: Enable debugging for troubleshooting
          # Set-PSDebug -Trace 1

          # Make sure the script exists
          if (-Not (Test-Path ".\build_windows.ps1")) {
              Write-Error "Script build_windows.ps1 not found in the repository root."
              exit 1
          }

          # Run the build script with parameters
          . ".\build_windows.ps1"
          BuildForWindows ${{ matrix.arch }} "${Env:VCPKG_ROOT}" $TRUE
