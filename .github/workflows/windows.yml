name: Windows Server 2022

on:
  pull_request:
    types: [synchronize, opened]
  push:

env:
  OPENCV_VERSION: 4.10.0

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2022"]
        arch: ["x86", "x64", "arm64"]

    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - uses: lukka/get-cmake@latest

      - name: Build and Install Dependencies with vcpkg
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          pkgs: |
            opencv4[contrib]
          triplet: ${{ matrix.arch }}-windows-static
          cache-key: vcpkg-${{ matrix.arch }}-${{ matrix.os }}
          revision: master
          token: ${{ github.token }}
          github-binarycache: true
      
      - name: Debug vcpkg root
        shell: pwsh
        run: |
          echo "vcpkg root: ${{ steps.vcpkg.outputs.vcpkg-root }}"
        
      - name: Debug vcpkg installation
        shell: pwsh
        run: |
          Get-ChildItem -Path "${{ steps.vcpkg.outputs.vcpkg-root }}/installed" -Recurse

      - name: Configure Project with CMake
        shell: pwsh
        run: |
          mkdir build
          cd build
          if ("${{ matrix.arch }}" -eq "x86") {
            cmake .. -G "Visual Studio 17 2022" -A Win32 -DCMAKE_BUILD_TYPE=Release `
              -DCMAKE_TOOLCHAIN_FILE="D:/a/opencv_contrib1/opencv_contrib1/vcpkg/scripts/buildsystems/vcpkg.cmake" `
              -DVCPKG_TARGET_TRIPLET=x86-windows-static
          } else {
            cmake .. -G "Visual Studio 17 2022" -A ${{ matrix.arch }} -DCMAKE_BUILD_TYPE=Release `
              -DCMAKE_TOOLCHAIN_FILE="D:/a/opencv_contrib1/opencv_contrib1/vcpkg/scripts/buildsystems/vcpkg.cmake" `
              -DVCPKG_TARGET_TRIPLET=${{ matrix.arch }}-windows-static
          }
        

      - name: Build Project with CMake
        run: |
          cd build
          cmake --build . --config Release -- /p:Platform=${{ matrix.arch }}
